"HALE60_Female_2000" = "...31",
) %>%
filter(!is.na(country))
exercise3
convert <- exercise3 %>%
pivot_wider(names_from="sex", values_from=c("meanL", "sdL", "meanR", "sdR"))
convert
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value")
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value") %>%
separate(Column, into = c("math", "sex"), sep="_")
WHOLifeExpectancy
convert
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value")
convert
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value")
WHOLifeExpectancy %>%
pivot_longer("HALEbirth_Both sexes_2016":"HALE60_Female_2000", names_to="Column", values_to="value")
WHOLifeExpectancy %>%
pivot_longer("HALEbirth_Both sexes_2016":"HALE60_Female_2000", names_to="Column", values_to="value") %>%
separate(Column, into=c("HALE_type", "sex", "year"), sep="_")
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value") %>%
separate(Column, into = c("math", "sex"), sep="_")
convert %>%
pivot_longer(meanL_F:sdR_M, names_to="Column", values_to="value") %>%
separate(Column, into = c("math", "sex"), sep="_") %>%
pivot_wider(names_from="math", values_from="value")
WHOLifeExpectancy %>%
pivot_longer("HALEbirth_Both sexes_2016":"HALE60_Female_2000", names_to="Column", values_to="value") %>%
separate(Column, into=c("HALE_type", "sex", "year"), sep="_") %>%
pivot_wider(names_from="HALE_type", values_from="value")
WHOLifeExpectancy %>%
pivot_longer("HALEbirth_Both sexes_2016":"HALE60_Female_2000", names_to="Column", values_to="value") %>%
separate(Column, into=c("HALE_type", "sex", "year"), sep="_") %>%
pivot_wider(names_from="HALE_type", values_from="value") %>%
arrange(desc(year))
world <- ne_countries(scale = "medium", returnclass = "sf")
library(plotly)
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
library(plotly)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(world) +
geom_sf()
View(world)
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016)
WHOLifeExpectancy <- WHOLifeExpectancy %>%
pivot_longer("HALEbirth_Both sexes_2016":"HALE60_Female_2000", names_to="Column", values_to="value") %>%
separate(Column, into=c("HALE_type", "sex", "year"), sep="_") %>%
pivot_wider(names_from="HALE_type", values_from="value") %>%
arrange(desc(year))
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016)
WHOLifeExpectancy2016
ggplot(WHOLifeExpectancy2016) +
geom_sf()
library(readr)
WHO_metadata <- read_csv("WHO_metadata.csv",
col_names = FALSE)
View(WHO_metadata)
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"Country" = "X3",
)
View(WHOLifeExpectancy2016)
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
world <- ne_countries(scale = "medium", returnclass = "sf")
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016)
WHOLifeExpectancy2016
left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
left_join(world, WHOLifeExpectancy2016, by=c("name" = "country"))
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("sov_a3" = "iso3"))
ggplot(world) +
geom_sf(aes(fill=sex))
library(plotly)
library(readr)
library("rnaturalearth")
library("rnaturalearthdata")
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
world <- ne_countries(scale = "medium", returnclass = "sf")
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016)
WHOLifeExpectancy2016
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("sov_a3" = "iso3"))
ggplot(world) +
geom_sf(aes(fill=sex))
world %>%
select(sex)
world %>%
select(name, sex)
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(world) +
geom_sf()
library(plotly)
library(readr)
library("rnaturalearth")
library("rnaturalearthdata")
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
world <- ne_countries(scale = "medium", returnclass = "sf")
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016)
WHOLifeExpectancy2016
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
ggplot(world) +
geom_sf(aes(fill=sex))
ggplot(world) +
geom_sf(aes(fill=sex))
west_election_graph_stuff <- left_join(us_county, western_county, by=c("fips2"="fips")) %>%
mutate(margin = cut(per_diff_2016, breaks = new_cutpoints)) %>%
filter(census_region=="West")
library(tidyverse)
library(openintro)
library(albersusa)
elections <- read_csv("elections.csv")
election_county <- read_csv("election_county.csv")
my_map_theme <-function(){
theme(panel.background=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
}
us_county <- counties_sf("laea")
us_county <- mutate(us_county, fips2 = as.numeric(as.character(fips)))
states <- usa_sf("laea")
western_states <- left_join(states, elections, by=c("name"="state")) %>%
filter(census.y=="West")
new_cutpoints <-c(-1.25, -1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1, 1.25)
western_county <- election_county %>%
filter(census_region=="West") %>%
select(fips, per_dem_2016, per_gop_2016, census_region) %>%
mutate(per_diff_2016 = per_dem_2016 - per_gop_2016)
west_election_graph_stuff <- left_join(us_county, western_county, by=c("fips2"="fips")) %>%
mutate(margin = cut(per_diff_2016, breaks = new_cutpoints)) %>%
filter(census_region=="West")
my_colors <-c("#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0","#92c5de","#4393c3","#2166ac")
ggplot(west_election_graph_stuff) +
geom_sf(aes(fill=margin)) +
geom_sf(data = western_states, alpha=0, size=0.7, color="black")+
my_map_theme() +
scale_fill_manual("margin of victory", values = my_colors)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3")) %>%
select(admin, sex)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
View(world)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3")) %>%
select(admin, sex)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3")) %>%
select(admin)
View(world)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
world <- ne_countries(scale = "medium", returnclass = "sf")
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3")) %>%
select(admin)
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(west_election_graph_stuff)
ggplot(west_election_graph_stuff) +
geom_sf(aes(fill=margin))
View(west_election_graph_stuff)
ggplot(west_election_graph_stuff)
ggplot(west_election_graph_stuff) +
geom_sf(aes(fill=margin))
ggplot(west_election_graph_stuff) +
geom_sf(aes(fill=margin)) +
geom_sf(data = western_states, alpha=0, size=0.7, color="black")+
my_map_theme() +
scale_fill_manual("margin of victory", values = my_colors)
ggplot(west_election_graph_stuff) +
geom_sf(aes(fill=margin))
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016, sex=="Both sexes")
WHOLifeExpectancy2016
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016, sex=="Both sexes")
WHOLifeExpectancy2016
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
ggplot(world) +
geom_sf(aes(fill=HALEbirth))
ggplot(world) +
geom_sf(aes(fill=HALEbirth))
?scales
ggplot(world) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_continuous(low=red, high=blue)
ggplot(world) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_continuous(low="red", high="blue")
ggplot(world) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_continuous(low="red", high="blue", labels=scales::percent)
ggplot(world) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_discrete(low="red", high="blue", labels=scales::percent)
ggplot(world) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_discrete(low="red", high="blue")
sf_object <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
sf_object
sf_object <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
View(sf_object)
?remove
remove(sf_object)
WHO_metadata <- read_csv("WHO_metadata.csv", col_names = FALSE) %>%
rename(
"iso3" = "X2",
"country" = "X3",
)
world <- ne_countries(scale = "medium", returnclass = "sf")
WHOLifeExpectancy2016 <- WHOLifeExpectancy %>%
filter(year==2016, sex=="Both sexes")
WHOLifeExpectancy2016
WHOLifeExpectancy2016 <- left_join(WHOLifeExpectancy2016, WHO_metadata, by=c("country" = "country"))
sf_object <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
sf_object
library(albersusa)
library(tidyverse)
#Recreate rent burden data
library(readxl)
burden <- read_excel("Apartment List Data -- Cost Burden 2019.xlsx", skip = 1)
burden <- select(burden, -12)
namelist <- c("N_Rent_Households", "Overall_Burden_Rate",
"Moderate_Burden_Rate", "Severe_Burden_Rate",
"N_Burden_Overall", "N_Burden_Moderate",
"N_Burden_Severe", "Median_Rent",
"Median_Renter_Income")
names(burden) <- c("Location", "Type",
paste(namelist, "18", sep="_"),
paste(namelist, "17", sep="_"),
paste(namelist, "08", sep="_"),
paste(namelist, "change_17_18", sep="_"),
paste(namelist, "change_08_18", sep="_"))
# Save a copy of the dataset for future use
write_csv(burden, "RentCostBurden.csv")
# Create map data
us_states <- usa_sf()
# Plot map
ggplot(us_states) +
geom_sf()
# Recreate map data using Alber's projection
us_states <- usa_sf("laea")
ggplot(us_states) +
geom_sf()
# Rent burden data for states only
burden_state <- burden %>%
filter(Type=="State") %>%
select(Location, Median_Rent_18)
# Join map data and rent burden data
us_states_burden <- left_join(us_states, burden_state, c("name"="Location"))
# Fill states by rent burden
ggplot(us_states_burden) +
geom_sf(aes(fill=Median_Rent_18))
# Adjust color of fill; remove background elements
ggplot(us_states_burden) +
geom_sf(aes(fill=Median_Rent_18)) +
scale_fill_continuous(low="yellow", high="red") +
theme(panel.background=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
# Create theme to remove background elements
my_map_theme <- function(){
theme(panel.background=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
}
# Same as previous map, shorter code due to theme
ggplot(us_states_burden) +
geom_sf(aes(fill=Median_Rent_18)) +
scale_fill_continuous(low="yellow", high="red") +
my_map_theme()
# Final refinements
ggplot(us_states_burden) +
geom_sf(aes(fill=Overall_Burden_Rate_18)) +
scale_fill_continuous(low="yellow", high="red", labels = scales::percent,
breaks=c(0.39,0.56)) +
guides(fill = guide_colorbar("Rent Cost Burden Rate", title.position="top")) +
theme(legend.position = c(1, 0), legend.direction = "horizontal") +
my_map_theme()+
labs(title="THE UNITED STATES OF HIGH RENT",
subtitle= "Apartment List looked at the cost of rent relative to income
and found the percent of households that were \"cost-burdened\"
with rent higher than 30% of their income.",
caption = "Source: Apartment List and Yahoo Finance") +
theme(plot.title = element_text(hjust=0.5, size = 20)) +
theme(plot.subtitle = element_text(hjust=0.5)) +
theme(plot.caption = element_text(hjust=0))
# Final refinements for average rent
ggplot(us_states_burden) +
geom_sf(aes(fill=Median_Rent_18)) +
scale_fill_continuous(low="yellow", high="red", labels = scales::percent,
breaks=c(800, 1600)) +
guides(fill = guide_colorbar("Average rent", title.position="top")) +
theme(legend.position = c(1, 0), legend.direction = "horizontal") +
my_map_theme()+
labs(title="THE UNITED STATES OF HIGH RENT",
subtitle= "Apartment List looked at the cost of rent relative to income
and found the percent of households that were \"cost-burdened\"
with rent higher than 30% of their income.",
caption = "Source: Apartment List and Yahoo Finance") +
theme(plot.title = element_text(hjust=0.5, size = 20)) +
theme(plot.subtitle = element_text(hjust=0.5)) +
theme(plot.caption = element_text(hjust=0))
ggplot(us_states_burden) +
geom_sf(aes(fill=Median_Rent_18)) +
scale_fill_continuous(low="yellow", high="red",
breaks=c(800, 1600)) +
guides(fill = guide_colorbar("Average rent", title.position="top")) +
theme(legend.position = c(1, 0), legend.direction = "horizontal") +
my_map_theme()+
labs(title="THE UNITED STATES OF HIGH RENT",
subtitle= "Apartment List looked at the cost of rent relative to income
and found the percent of households that were \"cost-burdened\"
with rent higher than 30% of their income.",
caption = "Source: Apartment List and Yahoo Finance") +
theme(plot.title = element_text(hjust=0.5, size = 20)) +
theme(plot.subtitle = element_text(hjust=0.5)) +
theme(plot.caption = element_text(hjust=0))
ggplot(sf_object) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75))
View(us_states_burden)
ggplot(sf_object) +
geom_sf(aes(fill=HALEbirth)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 75))
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 75))
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75))
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(sf_object, tooltip = as.numeric(HALEbirth)) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
?ggplotly
p <- sf_object %>%
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
p <- sf_object %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
p <- sf_object %>%
mutate(text = paste("<b>",HALEbirth,"</b>\nTB rate:",signif(TB_rate*10000,3),
"per 10,000 residents")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
p <- sf_object %>%
mutate(text = paste("<b>",HALEbirth,"</b>\nTB rate:",signif(TB_rate*10000,3),
"per 10,000 residents")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
p <- sf_object %>%
mutate(text = paste("<b>",HALEbirth,"</b>\nTB rate:",
"per 10,000 residents")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p, tooltip=text)
p <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p, tooltip=text)
p <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
?ggplotly
p <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years")) %>%
ggplot() +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
View(p)
View(p)
p <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
View(p)
sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
sf_object <- left_join(world, WHOLifeExpectancy2016, by=c("adm0_a3" = "iso3"))
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
sf_object %>%
mutate(text = paste0("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
sf_object <- sf_object %>%
mutate(text = paste0("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
sf_object <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p)
sf_object <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p, tooltip=text)
sf_object <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)")
ggplotly(p, tooltip="text")
sf_object <- sf_object %>%
mutate(text = paste("Healthy Life Expectancy at Birth: ", HALEbirth, " years"))
p <- ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth), text=text)) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)") +
my_map_theme()
ggplotly(p, tooltip="text")
ggplot(sf_object) +
geom_sf(aes(fill=as.numeric(HALEbirth))) +
scale_fill_continuous(low="red", high="blue", breaks=c(45, 55, 65, 75)) +
labs(fill = "Healthy Life Expectancy at Birth (years)") +
my_map_theme()
